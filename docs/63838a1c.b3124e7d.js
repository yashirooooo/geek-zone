(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{115:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return r})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return o}));var a=n(3),c=n(7),i=(n(0),n(186)),l={title:"Events"},r={unversionedId:"crust/events",id:"crust/events",isDocsHomePage:!1,title:"Events",description:"Events are emitted for certain operations on the runtime. The following sections describe the events that are part of the default Substrate runtime.",source:"@site/docs/crust/events.md",slug:"/crust/events",permalink:"/crust/events",editUrl:"https://github.com/yashirooooo/geek-zone/edit/master/docs/crust/events.md",version:"current",sidebar:"reference",previous:{title:"Extrinsics",permalink:"/crust/extrinsics"},next:{title:"Errors",permalink:"/crust/errors"}},b=[{value:"balances",id:"balances",children:[{value:"BalanceSet(<code>AccountId</code>, <code>Balance</code>, <code>Balance</code>)",id:"balancesetaccountid-balance-balance",children:[]},{value:"Deposit(<code>AccountId</code>, <code>Balance</code>)",id:"depositaccountid-balance",children:[]},{value:"DustLost(<code>AccountId</code>, <code>Balance</code>)",id:"dustlostaccountid-balance",children:[]},{value:"Endowed(<code>AccountId</code>, <code>Balance</code>)",id:"endowedaccountid-balance",children:[]},{value:"Reserved(<code>AccountId</code>, <code>Balance</code>)",id:"reservedaccountid-balance",children:[]},{value:"ReserveRepatriated(<code>AccountId</code>, <code>AccountId</code>, <code>Balance</code>, <code>BalanceStatus</code>)",id:"reserverepatriatedaccountid-accountid-balance-balancestatus",children:[]},{value:"Transfer(<code>AccountId</code>, <code>AccountId</code>, <code>Balance</code>)",id:"transferaccountid-accountid-balance",children:[]},{value:"Unreserved(<code>AccountId</code>, <code>Balance</code>)",id:"unreservedaccountid-balance",children:[]}]},{value:"benefits",id:"benefits",children:[{value:"AddBenefitFundsSuccess(<code>AccountId</code>, <code>Balance</code>, <code>FundsType</code>)",id:"addbenefitfundssuccessaccountid-balance-fundstype",children:[]},{value:"CutBenefitFundsSuccess(<code>AccountId</code>, <code>Balance</code>, <code>FundsType</code>)",id:"cutbenefitfundssuccessaccountid-balance-fundstype",children:[]},{value:"RebondBenefitFundsSuccess(<code>AccountId</code>, <code>Balance</code>, <code>FundsType</code>)",id:"rebondbenefitfundssuccessaccountid-balance-fundstype",children:[]},{value:"WithdrawBenefitFundsSuccess(<code>AccountId</code>, <code>Balance</code>)",id:"withdrawbenefitfundssuccessaccountid-balance",children:[]}]},{value:"claims",id:"claims",children:[{value:"BondEthSuccess(<code>AccountId</code>, <code>EthereumAddress</code>)",id:"bondethsuccessaccountid-ethereumaddress",children:[]},{value:"Claimed(<code>AccountId</code>, <code>EthereumAddress</code>, <code>Balance</code>)",id:"claimedaccountid-ethereumaddress-balance",children:[]},{value:"InitPot(<code>AccountId</code>, <code>Balance</code>)",id:"initpotaccountid-balance",children:[]},{value:"MinerChanged(<code>AccountId</code>)",id:"minerchangedaccountid",children:[]},{value:"MintSuccess(<code>EthereumTxHash</code>, <code>EthereumAddress</code>, <code>Balance</code>)",id:"mintsuccessethereumtxhash-ethereumaddress-balance",children:[]},{value:"SetLimitSuccess(<code>Balance</code>)",id:"setlimitsuccessbalance",children:[]},{value:"SuperiorChanged(<code>AccountId</code>)",id:"superiorchangedaccountid",children:[]}]},{value:"grandpa",id:"grandpa",children:[{value:"NewAuthorities(<code>AuthorityList</code>)",id:"newauthoritiesauthoritylist",children:[]},{value:"Paused()",id:"paused",children:[]},{value:"Resumed()",id:"resumed",children:[]}]},{value:"identity",id:"identity",children:[{value:"IdentityCleared(<code>AccountId</code>, <code>Balance</code>)",id:"identityclearedaccountid-balance",children:[]},{value:"IdentityKilled(<code>AccountId</code>, <code>Balance</code>)",id:"identitykilledaccountid-balance",children:[]},{value:"IdentitySet(<code>AccountId</code>)",id:"identitysetaccountid",children:[]},{value:"JudgementGiven(<code>AccountId</code>, <code>RegistrarIndex</code>)",id:"judgementgivenaccountid-registrarindex",children:[]},{value:"JudgementRequested(<code>AccountId</code>, <code>RegistrarIndex</code>)",id:"judgementrequestedaccountid-registrarindex",children:[]},{value:"JudgementUnrequested(<code>AccountId</code>, <code>RegistrarIndex</code>)",id:"judgementunrequestedaccountid-registrarindex",children:[]},{value:"RegistrarAdded(<code>RegistrarIndex</code>)",id:"registraraddedregistrarindex",children:[]},{value:"SubIdentityAdded(<code>AccountId</code>, <code>AccountId</code>, <code>Balance</code>)",id:"subidentityaddedaccountid-accountid-balance",children:[]},{value:"SubIdentityRemoved(<code>AccountId</code>, <code>AccountId</code>, <code>Balance</code>)",id:"subidentityremovedaccountid-accountid-balance",children:[]},{value:"SubIdentityRevoked(<code>AccountId</code>, <code>AccountId</code>, <code>Balance</code>)",id:"subidentityrevokedaccountid-accountid-balance",children:[]}]},{value:"imOnline",id:"imonline",children:[{value:"AllGood()",id:"allgood",children:[]},{value:"HeartbeatReceived(<code>AuthorityId</code>)",id:"heartbeatreceivedauthorityid",children:[]},{value:"SomeOffline(<code>Vec&lt;IdentificationTuple&gt;</code>)",id:"someofflinevecidentificationtuple",children:[]}]},{value:"indices",id:"indices",children:[{value:"IndexAssigned(<code>AccountId</code>, <code>AccountIndex</code>)",id:"indexassignedaccountid-accountindex",children:[]},{value:"IndexFreed(<code>AccountIndex</code>)",id:"indexfreedaccountindex",children:[]},{value:"IndexFrozen(<code>AccountIndex</code>, <code>AccountId</code>)",id:"indexfrozenaccountindex-accountid",children:[]}]},{value:"locks",id:"locks",children:[{value:"UnlockStartedFrom(<code>BlockNumber</code>)",id:"unlockstartedfromblocknumber",children:[]},{value:"UnlockSuccess(<code>AccountId</code>, <code>BlockNumber</code>)",id:"unlocksuccessaccountid-blocknumber",children:[]}]},{value:"market",id:"market",children:[{value:"AddPrepaidSuccess(<code>AccountId</code>, <code>MerkleRoot</code>, <code>Balance</code>)",id:"addprepaidsuccessaccountid-merkleroot-balance",children:[]},{value:"CalculateSuccess(<code>MerkleRoot</code>)",id:"calculatesuccessmerkleroot",children:[]},{value:"FileSuccess(<code>AccountId</code>, <code>MerkleRoot</code>)",id:"filesuccessaccountid-merkleroot",children:[]},{value:"IllegalFileClosed(<code>MerkleRoot</code>)",id:"illegalfileclosedmerkleroot",children:[]},{value:"RenewFileSuccess(<code>AccountId</code>, <code>MerkleRoot</code>)",id:"renewfilesuccessaccountid-merkleroot",children:[]},{value:"RewardMerchantSuccess(<code>AccountId</code>)",id:"rewardmerchantsuccessaccountid",children:[]},{value:"SetBaseFeeSuccess(<code>Balance</code>)",id:"setbasefeesuccessbalance",children:[]},{value:"SetEnableMarketSuccess(<code>bool</code>)",id:"setenablemarketsuccessbool",children:[]}]},{value:"multisig",id:"multisig",children:[{value:"MultisigApproval(<code>AccountId</code>, <code>Timepoint</code>, <code>AccountId</code>, <code>CallHash</code>)",id:"multisigapprovalaccountid-timepoint-accountid-callhash",children:[]},{value:"MultisigCancelled(<code>AccountId</code>, <code>Timepoint</code>, <code>AccountId</code>, <code>CallHash</code>)",id:"multisigcancelledaccountid-timepoint-accountid-callhash",children:[]},{value:"MultisigExecuted(<code>AccountId</code>, <code>Timepoint</code>, <code>AccountId</code>, <code>CallHash</code>, <code>DispatchResult</code>)",id:"multisigexecutedaccountid-timepoint-accountid-callhash-dispatchresult",children:[]},{value:"NewMultisig(<code>AccountId</code>, <code>AccountId</code>, <code>CallHash</code>)",id:"newmultisigaccountid-accountid-callhash",children:[]}]},{value:"offences",id:"offences",children:[{value:"Offence(<code>Kind</code>, <code>OpaqueTimeSlot</code>, <code>bool</code>)",id:"offencekind-opaquetimeslot-bool",children:[]}]},{value:"scheduler",id:"scheduler",children:[{value:"Canceled(<code>BlockNumber</code>, <code>u32</code>)",id:"canceledblocknumber-u32",children:[]},{value:"Dispatched(<code>TaskAddress</code>, <code>Option&lt;Bytes&gt;</code>, <code>DispatchResult</code>)",id:"dispatchedtaskaddress-optionbytes-dispatchresult",children:[]},{value:"Scheduled(<code>BlockNumber</code>, <code>u32</code>)",id:"scheduledblocknumber-u32",children:[]}]},{value:"session",id:"session",children:[{value:"NewSession(<code>SessionIndex</code>)",id:"newsessionsessionindex",children:[]}]},{value:"staking",id:"staking",children:[{value:"Bonded(<code>AccountId</code>, <code>Balance</code>)",id:"bondedaccountid-balance",children:[]},{value:"ChillSuccess(<code>AccountId</code>, <code>AccountId</code>)",id:"chillsuccessaccountid-accountid",children:[]},{value:"CutGuaranteeSuccess(<code>AccountId</code>, <code>AccountId</code>, <code>Balance</code>)",id:"cutguaranteesuccessaccountid-accountid-balance",children:[]},{value:"EraReward(<code>EraIndex</code>, <code>Balance</code>, <code>Balance</code>)",id:"erarewarderaindex-balance-balance",children:[]},{value:"GuaranteeSuccess(<code>AccountId</code>, <code>AccountId</code>, <code>Balance</code>)",id:"guaranteesuccessaccountid-accountid-balance",children:[]},{value:"NotEnoughCurrency(<code>EraIndex</code>, <code>Balance</code>, <code>Balance</code>)",id:"notenoughcurrencyeraindex-balance-balance",children:[]},{value:"OldSlashingReportDiscarded(<code>SessionIndex</code>)",id:"oldslashingreportdiscardedsessionindex",children:[]},{value:"Reward(<code>AccountId</code>, <code>Balance</code>)",id:"rewardaccountid-balance",children:[]},{value:"Slash(<code>AccountId</code>, <code>Balance</code>)",id:"slashaccountid-balance",children:[]},{value:"Unbonded(<code>AccountId</code>, <code>Balance</code>)",id:"unbondedaccountid-balance",children:[]},{value:"UpdateStakeLimitSuccess(<code>u32</code>)",id:"updatestakelimitsuccessu32",children:[]},{value:"ValidateSuccess(<code>AccountId</code>, <code>ValidatorPrefs</code>)",id:"validatesuccessaccountid-validatorprefs",children:[]},{value:"Withdrawn(<code>AccountId</code>, <code>Balance</code>)",id:"withdrawnaccountid-balance",children:[]}]},{value:"sudo",id:"sudo",children:[{value:"KeyChanged(<code>AccountId</code>)",id:"keychangedaccountid",children:[]},{value:"Sudid(<code>DispatchResult</code>)",id:"sudiddispatchresult",children:[]},{value:"SudoAsDone(<code>DispatchResult</code>)",id:"sudoasdonedispatchresult",children:[]}]},{value:"swork",id:"swork",children:[{value:"ABUpgradeSuccess(<code>AccountId</code>, <code>SworkerPubKey</code>, <code>SworkerPubKey</code>)",id:"abupgradesuccessaccountid-sworkerpubkey-sworkerpubkey",children:[]},{value:"AddIntoAllowlistSuccess(<code>AccountId</code>, <code>AccountId</code>)",id:"addintoallowlistsuccessaccountid-accountid",children:[]},{value:"CancelPunishmentSuccess(<code>AccountId</code>)",id:"cancelpunishmentsuccessaccountid",children:[]},{value:"CreateGroupSuccess(<code>AccountId</code>)",id:"creategroupsuccessaccountid",children:[]},{value:"JoinGroupSuccess(<code>AccountId</code>, <code>AccountId</code>)",id:"joingroupsuccessaccountid-accountid",children:[]},{value:"KickOutSuccess(<code>AccountId</code>)",id:"kickoutsuccessaccountid",children:[]},{value:"QuitGroupSuccess(<code>AccountId</code>, <code>AccountId</code>)",id:"quitgroupsuccessaccountid-accountid",children:[]},{value:"RegisterSuccess(<code>AccountId</code>, <code>SworkerPubKey</code>)",id:"registersuccessaccountid-sworkerpubkey",children:[]},{value:"RemoveFromAllowlistSuccess(<code>AccountId</code>, <code>AccountId</code>)",id:"removefromallowlistsuccessaccountid-accountid",children:[]},{value:"SetCodeSuccess(<code>SworkerCode</code>, <code>BlockNumber</code>)",id:"setcodesuccesssworkercode-blocknumber",children:[]},{value:"SetPunishmentSuccess(<code>bool</code>)",id:"setpunishmentsuccessbool",children:[]},{value:"WorksReportSuccess(<code>AccountId</code>, <code>SworkerPubKey</code>)",id:"worksreportsuccessaccountid-sworkerpubkey",children:[]}]},{value:"system",id:"system",children:[{value:"CodeUpdated()",id:"codeupdated",children:[]},{value:"ExtrinsicFailed(<code>DispatchError</code>, <code>DispatchInfo</code>)",id:"extrinsicfaileddispatcherror-dispatchinfo",children:[]},{value:"ExtrinsicSuccess(<code>DispatchInfo</code>)",id:"extrinsicsuccessdispatchinfo",children:[]},{value:"KilledAccount(<code>AccountId</code>)",id:"killedaccountaccountid",children:[]},{value:"NewAccount(<code>AccountId</code>)",id:"newaccountaccountid",children:[]}]},{value:"treasury",id:"treasury",children:[{value:"Awarded(<code>ProposalIndex</code>, <code>Balance</code>, <code>AccountId</code>)",id:"awardedproposalindex-balance-accountid",children:[]},{value:"Burnt(<code>Balance</code>)",id:"burntbalance",children:[]},{value:"Deposit(<code>Balance</code>)",id:"depositbalance",children:[]},{value:"Proposed(<code>ProposalIndex</code>)",id:"proposedproposalindex",children:[]},{value:"Rejected(<code>ProposalIndex</code>, <code>Balance</code>)",id:"rejectedproposalindex-balance",children:[]},{value:"Rollover(<code>Balance</code>)",id:"rolloverbalance",children:[]},{value:"Spending(<code>Balance</code>)",id:"spendingbalance",children:[]}]},{value:"utility",id:"utility",children:[{value:"BatchCompleted()",id:"batchcompleted",children:[]},{value:"BatchInterrupted(<code>u32</code>, <code>DispatchError</code>)",id:"batchinterruptedu32-dispatcherror",children:[]}]}],d={toc:b};function o(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Events are emitted for certain operations on the runtime. The following sections describe the events that are part of the default Substrate runtime. "),Object(i.b)("p",null,"(NOTE: These were generated from a static/snapshot view of a recent Substrate master node. Some items may not be available in older nodes, or in any customized implementations.)"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#balances"},"balances")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#benefits"},"benefits")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#claims"},"claims")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#grandpa"},"grandpa")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#identity"},"identity")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#imonline"},"imOnline")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#indices"},"indices")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#locks"},"locks")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#market"},"market")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#multisig"},"multisig")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#offences"},"offences")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#scheduler"},"scheduler")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#session"},"session")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#staking"},"staking")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#sudo"},"sudo")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#swork"},"swork")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#system"},"system")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#treasury"},"treasury")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",{parentName:"strong",href:"#utility"},"utility"))))),Object(i.b)("hr",null),Object(i.b)("h2",{id:"balances"},"balances"),Object(i.b)("h3",{id:"balancesetaccountid-balance-balance"},"BalanceSet(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.balances.BalanceSet.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A balance was set by root. ","[","who, free, reserved","]"," ")),Object(i.b)("h3",{id:"depositaccountid-balance"},"Deposit(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.balances.Deposit.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Some amount was deposited (e.g. for transaction fees). ","[","who, deposit","]"," ")),Object(i.b)("h3",{id:"dustlostaccountid-balance"},"DustLost(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.balances.DustLost.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   An account was removed whose balance was non-zero but below ExistentialDeposit, resulting in an outright loss. ","[","account, balance","]"," ")),Object(i.b)("h3",{id:"endowedaccountid-balance"},"Endowed(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.balances.Endowed.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   An account was created with some free balance. ","[","account, free_balance","]"," ")),Object(i.b)("h3",{id:"reservedaccountid-balance"},"Reserved(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.balances.Reserved.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Some balance was reserved (moved from free to reserved). ","[","who, value","]"," ")),Object(i.b)("h3",{id:"reserverepatriatedaccountid-accountid-balance-balancestatus"},"ReserveRepatriated(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"BalanceStatus"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.balances.ReserveRepatriated.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Some balance was moved from the reserve of the first account to the second account. Final argument indicates the destination balance type. ","[","from, to, balance, destination_status","]"," ")),Object(i.b)("h3",{id:"transferaccountid-accountid-balance"},"Transfer(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.balances.Transfer.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Transfer succeeded. ","[","from, to, value","]"," ")),Object(i.b)("h3",{id:"unreservedaccountid-balance"},"Unreserved(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.balances.Unreserved.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Some balance was unreserved (moved from reserved to free). ","[","who, value","]"," ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"benefits"},"benefits"),Object(i.b)("h3",{id:"addbenefitfundssuccessaccountid-balance-fundstype"},"AddBenefitFundsSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"FundsType"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.benefits.AddBenefitFundsSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Add benefit funds success. The first item is the account. The second item is the added benefit amount. ")),Object(i.b)("h3",{id:"cutbenefitfundssuccessaccountid-balance-fundstype"},"CutBenefitFundsSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"FundsType"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.benefits.CutBenefitFundsSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Cut benefit funds success The first item is the account. The second item is the decreased benefit amount. ")),Object(i.b)("h3",{id:"rebondbenefitfundssuccessaccountid-balance-fundstype"},"RebondBenefitFundsSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"FundsType"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.benefits.RebondBenefitFundsSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Rebond benefit funds success The first item is the account. The second item is the rebonded benefit amount. ")),Object(i.b)("h3",{id:"withdrawbenefitfundssuccessaccountid-balance"},"WithdrawBenefitFundsSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.benefits.WithdrawBenefitFundsSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Withdraw benefit funds success The first item is the account. The second item is the withdrawed benefit amount. ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"claims"},"claims"),Object(i.b)("h3",{id:"bondethsuccessaccountid-ethereumaddress"},"BondEthSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"EthereumAddress"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.claims.BondEthSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Ethereum address was bonded to account. ","[who, ethereum_address]"," ")),Object(i.b)("h3",{id:"claimedaccountid-ethereumaddress-balance"},"Claimed(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"EthereumAddress"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.claims.Claimed.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Someone claimed some CRUs. ","[who, ethereum_address, amount]"," ")),Object(i.b)("h3",{id:"initpotaccountid-balance"},"InitPot(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.claims.InitPot.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Init pot success ")),Object(i.b)("h3",{id:"minerchangedaccountid"},"MinerChanged(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.claims.MinerChanged.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Someone be the new miner ")),Object(i.b)("h3",{id:"mintsuccessethereumtxhash-ethereumaddress-balance"},"MintSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"EthereumTxHash"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"EthereumAddress"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.claims.MintSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Mint claims successfully ")),Object(i.b)("h3",{id:"setlimitsuccessbalance"},"SetLimitSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.claims.SetLimitSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Set limit successfully ")),Object(i.b)("h3",{id:"superiorchangedaccountid"},"SuperiorChanged(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.claims.SuperiorChanged.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Someone be the new superior ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"grandpa"},"grandpa"),Object(i.b)("h3",{id:"newauthoritiesauthoritylist"},"NewAuthorities(",Object(i.b)("inlineCode",{parentName:"h3"},"AuthorityList"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.grandpa.NewAuthorities.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   New authority set has been applied. ","[","authority_set","]"," ")),Object(i.b)("h3",{id:"paused"},"Paused()"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.grandpa.Paused.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Current authority set has been paused. ")),Object(i.b)("h3",{id:"resumed"},"Resumed()"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.grandpa.Resumed.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Current authority set has been resumed. ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"identity"},"identity"),Object(i.b)("h3",{id:"identityclearedaccountid-balance"},"IdentityCleared(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.identity.IdentityCleared.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A name was cleared, and the given balance returned. ","[","who, deposit","]"," ")),Object(i.b)("h3",{id:"identitykilledaccountid-balance"},"IdentityKilled(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.identity.IdentityKilled.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A name was removed and the given balance slashed. ","[","who, deposit","]"," ")),Object(i.b)("h3",{id:"identitysetaccountid"},"IdentitySet(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.identity.IdentitySet.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A name was set or reset (which will remove all judgements). ","[","who","]"," ")),Object(i.b)("h3",{id:"judgementgivenaccountid-registrarindex"},"JudgementGiven(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"RegistrarIndex"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.identity.JudgementGiven.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A judgement was given by a registrar. ","[","target, registrar_index","]"," ")),Object(i.b)("h3",{id:"judgementrequestedaccountid-registrarindex"},"JudgementRequested(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"RegistrarIndex"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.identity.JudgementRequested.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A judgement was asked from a registrar. ","[","who, registrar_index","]"," ")),Object(i.b)("h3",{id:"judgementunrequestedaccountid-registrarindex"},"JudgementUnrequested(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"RegistrarIndex"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.identity.JudgementUnrequested.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A judgement request was retracted. ","[","who, registrar_index","]"," ")),Object(i.b)("h3",{id:"registraraddedregistrarindex"},"RegistrarAdded(",Object(i.b)("inlineCode",{parentName:"h3"},"RegistrarIndex"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.identity.RegistrarAdded.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A registrar was added. ","[","registrar_index","]"," ")),Object(i.b)("h3",{id:"subidentityaddedaccountid-accountid-balance"},"SubIdentityAdded(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.identity.SubIdentityAdded.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A sub-identity was added to an identity and the deposit paid. ","[","sub, main, deposit","]"," ")),Object(i.b)("h3",{id:"subidentityremovedaccountid-accountid-balance"},"SubIdentityRemoved(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.identity.SubIdentityRemoved.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A sub-identity was removed from an identity and the deposit freed. ","[","sub, main, deposit","]"," ")),Object(i.b)("h3",{id:"subidentityrevokedaccountid-accountid-balance"},"SubIdentityRevoked(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.identity.SubIdentityRevoked.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A sub-identity was cleared, and the given deposit repatriated from the main identity account to the sub-identity account. ","[","sub, main, deposit","]"," ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"imonline"},"imOnline"),Object(i.b)("h3",{id:"allgood"},"AllGood()"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.imOnline.AllGood.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   At the end of the session, no offence was committed. ")),Object(i.b)("h3",{id:"heartbeatreceivedauthorityid"},"HeartbeatReceived(",Object(i.b)("inlineCode",{parentName:"h3"},"AuthorityId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.imOnline.HeartbeatReceived.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A new heartbeat was received from ",Object(i.b)("inlineCode",{parentName:"li"},"AuthorityId")," ","[","authority_id","]"," ")),Object(i.b)("h3",{id:"someofflinevecidentificationtuple"},"SomeOffline(",Object(i.b)("inlineCode",{parentName:"h3"},"Vec<IdentificationTuple>"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.imOnline.SomeOffline.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   At the end of the session, at least one validator was found to be ","[","offline","]",". ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"indices"},"indices"),Object(i.b)("h3",{id:"indexassignedaccountid-accountindex"},"IndexAssigned(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountIndex"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.indices.IndexAssigned.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A account index was assigned. ","[","index, who","]"," ")),Object(i.b)("h3",{id:"indexfreedaccountindex"},"IndexFreed(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountIndex"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.indices.IndexFreed.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A account index has been freed up (unassigned). ","[","index","]"," ")),Object(i.b)("h3",{id:"indexfrozenaccountindex-accountid"},"IndexFrozen(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountIndex"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.indices.IndexFrozen.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A account index has been frozen to its current account ID. ","[","index, who","]"," ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"locks"},"locks"),Object(i.b)("h3",{id:"unlockstartedfromblocknumber"},"UnlockStartedFrom(",Object(i.b)("inlineCode",{parentName:"h3"},"BlockNumber"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.locks.UnlockStartedFrom.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Set global unlock from date ")),Object(i.b)("h3",{id:"unlocksuccessaccountid-blocknumber"},"UnlockSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"BlockNumber"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.locks.UnlockSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Unlock success ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"market"},"market"),Object(i.b)("h3",{id:"addprepaidsuccessaccountid-merkleroot-balance"},"AddPrepaidSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"MerkleRoot"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.market.AddPrepaidSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Add prepaid value for an existed file success. The first item is the account who add the prepaid. The second item is the cid of the file. The third item is the prepaid amount of currency. ")),Object(i.b)("h3",{id:"calculatesuccessmerkleroot"},"CalculateSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"MerkleRoot"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.market.CalculateSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Calculate the reward for a file success. The first item is the cid of the file. ")),Object(i.b)("h3",{id:"filesuccessaccountid-merkleroot"},"FileSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"MerkleRoot"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.market.FileSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Place a storage order success. The first item is the account who places the storage order. The second item is the cid of the file. ")),Object(i.b)("h3",{id:"illegalfileclosedmerkleroot"},"IllegalFileClosed(",Object(i.b)("inlineCode",{parentName:"h3"},"MerkleRoot"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.market.IllegalFileClosed.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A file is closed due to mismatch file size. The first item is the cid of the file. ")),Object(i.b)("h3",{id:"renewfilesuccessaccountid-merkleroot"},"RenewFileSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"MerkleRoot"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.market.RenewFileSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Renew an existed file success. The first item is the account who renew the storage order. The second item is the cid of the file. ")),Object(i.b)("h3",{id:"rewardmerchantsuccessaccountid"},"RewardMerchantSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.market.RewardMerchantSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Reward the merchant success. The first item is the account of the merchant. ")),Object(i.b)("h3",{id:"setbasefeesuccessbalance"},"SetBaseFeeSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.market.SetBaseFeeSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Set the file base fee success. ")),Object(i.b)("h3",{id:"setenablemarketsuccessbool"},"SetEnableMarketSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"bool"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.market.SetEnableMarketSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Set the global market switch success. ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"multisig"},"multisig"),Object(i.b)("h3",{id:"multisigapprovalaccountid-timepoint-accountid-callhash"},"MultisigApproval(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Timepoint"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"CallHash"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.multisig.MultisigApproval.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A multisig operation has been approved by someone. ","[","approving, timepoint, multisig, call_hash","]"," ")),Object(i.b)("h3",{id:"multisigcancelledaccountid-timepoint-accountid-callhash"},"MultisigCancelled(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Timepoint"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"CallHash"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.multisig.MultisigCancelled.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A multisig operation has been cancelled. ","[","cancelling, timepoint, multisig, call_hash","]"," ")),Object(i.b)("h3",{id:"multisigexecutedaccountid-timepoint-accountid-callhash-dispatchresult"},"MultisigExecuted(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Timepoint"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"CallHash"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"DispatchResult"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.multisig.MultisigExecuted.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A multisig operation has been executed. ","[","approving, timepoint, multisig, call_hash","]"," ")),Object(i.b)("h3",{id:"newmultisigaccountid-accountid-callhash"},"NewMultisig(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"CallHash"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.multisig.NewMultisig.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A new multisig operation has begun. ","[","approving, multisig, call_hash","]"," ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"offences"},"offences"),Object(i.b)("h3",{id:"offencekind-opaquetimeslot-bool"},"Offence(",Object(i.b)("inlineCode",{parentName:"h3"},"Kind"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"OpaqueTimeSlot"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"bool"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.offences.Offence.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   There is an offence reported of the given ",Object(i.b)("inlineCode",{parentName:"li"},"kind")," happened at the ",Object(i.b)("inlineCode",{parentName:"li"},"session_index")," and (kind-specific) time slot. This event is not deposited for duplicate slashes. last element indicates of the offence was applied (true) or queued (false) ","[","kind, timeslot, applied","]",". ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"scheduler"},"scheduler"),Object(i.b)("h3",{id:"canceledblocknumber-u32"},"Canceled(",Object(i.b)("inlineCode",{parentName:"h3"},"BlockNumber"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"u32"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.scheduler.Canceled.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Canceled some task. ","[","when, index","]"," ")),Object(i.b)("h3",{id:"dispatchedtaskaddress-optionbytes-dispatchresult"},"Dispatched(",Object(i.b)("inlineCode",{parentName:"h3"},"TaskAddress"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Option<Bytes>"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"DispatchResult"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.scheduler.Dispatched.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Dispatched some task. ","[","task, id, result","]"," ")),Object(i.b)("h3",{id:"scheduledblocknumber-u32"},"Scheduled(",Object(i.b)("inlineCode",{parentName:"h3"},"BlockNumber"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"u32"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.scheduler.Scheduled.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Scheduled some task. ","[","when, index","]"," ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"session"},"session"),Object(i.b)("h3",{id:"newsessionsessionindex"},"NewSession(",Object(i.b)("inlineCode",{parentName:"h3"},"SessionIndex"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.session.NewSession.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   New session has happened. Note that the argument is the ","[","session_index","]",", not the block number as the type might suggest. ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"staking"},"staking"),Object(i.b)("h3",{id:"bondedaccountid-balance"},"Bonded(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"p"},"api.events.staking.Bonded.is"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"summary"),":   An account has bonded this amount. ","[stash, amount]"," "),Object(i.b)("p",{parentName:"li"},"NOTE: This event is only emitted when funds are bonded via a dispatchable. Notably, it will not be emitted for staking rewards when they are added to stake. "))),Object(i.b)("h3",{id:"chillsuccessaccountid-accountid"},"ChillSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.staking.ChillSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   An account has been chilled from its stash ")),Object(i.b)("h3",{id:"cutguaranteesuccessaccountid-accountid-balance"},"CutGuaranteeSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.staking.CutGuaranteeSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   An account has called ",Object(i.b)("inlineCode",{parentName:"li"},"cut_guarantee")," and cut vote for one validator. ")),Object(i.b)("h3",{id:"erarewarderaindex-balance-balance"},"EraReward(",Object(i.b)("inlineCode",{parentName:"h3"},"EraIndex"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.staking.EraReward.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Total reward at each era ")),Object(i.b)("h3",{id:"guaranteesuccessaccountid-accountid-balance"},"GuaranteeSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.staking.GuaranteeSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   An account has called ",Object(i.b)("inlineCode",{parentName:"li"},"guarantee")," and vote for one validator. ")),Object(i.b)("h3",{id:"notenoughcurrencyeraindex-balance-balance"},"NotEnoughCurrency(",Object(i.b)("inlineCode",{parentName:"h3"},"EraIndex"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.staking.NotEnoughCurrency.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Staking pot is not enough ")),Object(i.b)("h3",{id:"oldslashingreportdiscardedsessionindex"},"OldSlashingReportDiscarded(",Object(i.b)("inlineCode",{parentName:"h3"},"SessionIndex"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.staking.OldSlashingReportDiscarded.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   An old slashing report from a prior era was discarded because it could not be processed. ")),Object(i.b)("h3",{id:"rewardaccountid-balance"},"Reward(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.staking.Reward.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   All validators have been rewarded by the first balance; the second is the remainder from the maximum amount of reward. ")),Object(i.b)("h3",{id:"slashaccountid-balance"},"Slash(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.staking.Slash.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   One validator (and its guarantors) has been slashed by the given amount. ")),Object(i.b)("h3",{id:"unbondedaccountid-balance"},"Unbonded(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.staking.Unbonded.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   An account has unbonded this amount. ","[stash, amount]"," ")),Object(i.b)("h3",{id:"updatestakelimitsuccessu32"},"UpdateStakeLimitSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"u32"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.staking.UpdateStakeLimitSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Update the identities success. The stake limit of each identity would be updated. ")),Object(i.b)("h3",{id:"validatesuccessaccountid-validatorprefs"},"ValidateSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"ValidatorPrefs"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.staking.ValidateSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   An account has called ",Object(i.b)("inlineCode",{parentName:"li"},"validate")," and set guarantee fee. ")),Object(i.b)("h3",{id:"withdrawnaccountid-balance"},"Withdrawn(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.staking.Withdrawn.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   An account has called ",Object(i.b)("inlineCode",{parentName:"li"},"withdraw_unbonded")," and removed unbonding chunks worth ",Object(i.b)("inlineCode",{parentName:"li"},"Balance")," from the unlocking queue. ","[stash, amount]"," ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"sudo"},"sudo"),Object(i.b)("h3",{id:"keychangedaccountid"},"KeyChanged(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.sudo.KeyChanged.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   The ","[","sudoer","]"," just switched identity; the old key is supplied. ")),Object(i.b)("h3",{id:"sudiddispatchresult"},"Sudid(",Object(i.b)("inlineCode",{parentName:"h3"},"DispatchResult"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.sudo.Sudid.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A sudo just took place. ","[","result","]"," ")),Object(i.b)("h3",{id:"sudoasdonedispatchresult"},"SudoAsDone(",Object(i.b)("inlineCode",{parentName:"h3"},"DispatchResult"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.sudo.SudoAsDone.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A sudo just took place. ","[","result","]"," ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"swork"},"swork"),Object(i.b)("h3",{id:"abupgradesuccessaccountid-sworkerpubkey-sworkerpubkey"},"ABUpgradeSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"SworkerPubKey"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"SworkerPubKey"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.swork.ABUpgradeSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   AB upgrade success. The first item is the account who're doing AB upgrade. The second item is the pub key of the previous(A) sWorker. The third item is the pub key of the latest(B) sWorker. ")),Object(i.b)("h3",{id:"addintoallowlistsuccessaccountid-accountid"},"AddIntoAllowlistSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.swork.AddIntoAllowlistSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Add who into allowlist success. ")),Object(i.b)("h3",{id:"cancelpunishmentsuccessaccountid"},"CancelPunishmentSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.swork.CancelPunishmentSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Cancel the punishment success. ")),Object(i.b)("h3",{id:"creategroupsuccessaccountid"},"CreateGroupSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.swork.CreateGroupSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Create the group success. The first item is the group owner's account. ")),Object(i.b)("h3",{id:"joingroupsuccessaccountid-accountid"},"JoinGroupSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.swork.JoinGroupSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Join the group success. The first item is the member's account. The second item is the group owner's account. ")),Object(i.b)("h3",{id:"kickoutsuccessaccountid"},"KickOutSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.swork.KickOutSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Kick some one out of the group. The first item is the member's account. ")),Object(i.b)("h3",{id:"quitgroupsuccessaccountid-accountid"},"QuitGroupSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.swork.QuitGroupSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Quit the group success. The first item is the member's account. The second item is the group owner's account. ")),Object(i.b)("h3",{id:"registersuccessaccountid-sworkerpubkey"},"RegisterSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"SworkerPubKey"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.swork.RegisterSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   sWorker registration success. The first item is the account who try to register. The second item is the pub key of the sWorker. ")),Object(i.b)("h3",{id:"removefromallowlistsuccessaccountid-accountid"},"RemoveFromAllowlistSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.swork.RemoveFromAllowlistSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Remove who from allowlist success. ")),Object(i.b)("h3",{id:"setcodesuccesssworkercode-blocknumber"},"SetCodeSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"SworkerCode"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"BlockNumber"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.swork.SetCodeSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Set code success. The first item is the enclave code. The second item is the expired block number. ")),Object(i.b)("h3",{id:"setpunishmentsuccessbool"},"SetPunishmentSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"bool"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.swork.SetPunishmentSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Enable the punishment or disable it. ")),Object(i.b)("h3",{id:"worksreportsuccessaccountid-sworkerpubkey"},"WorksReportSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"SworkerPubKey"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.swork.WorksReportSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Send the work report success. The first item is the account who send the work report The second item is the pub key of the sWorker. ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"system"},"system"),Object(i.b)("h3",{id:"codeupdated"},"CodeUpdated()"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.system.CodeUpdated.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   ",Object(i.b)("inlineCode",{parentName:"li"},":code")," was updated. ")),Object(i.b)("h3",{id:"extrinsicfaileddispatcherror-dispatchinfo"},"ExtrinsicFailed(",Object(i.b)("inlineCode",{parentName:"h3"},"DispatchError"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"DispatchInfo"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.system.ExtrinsicFailed.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   An extrinsic failed. ","[","error, info","]"," ")),Object(i.b)("h3",{id:"extrinsicsuccessdispatchinfo"},"ExtrinsicSuccess(",Object(i.b)("inlineCode",{parentName:"h3"},"DispatchInfo"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.system.ExtrinsicSuccess.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   An extrinsic completed successfully. ","[","info","]"," ")),Object(i.b)("h3",{id:"killedaccountaccountid"},"KilledAccount(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.system.KilledAccount.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   An ","[","account","]"," was reaped. ")),Object(i.b)("h3",{id:"newaccountaccountid"},"NewAccount(",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.system.NewAccount.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A new ","[","account","]"," was created. ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"treasury"},"treasury"),Object(i.b)("h3",{id:"awardedproposalindex-balance-accountid"},"Awarded(",Object(i.b)("inlineCode",{parentName:"h3"},"ProposalIndex"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"AccountId"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.treasury.Awarded.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Some funds have been allocated. ","[","proposal_index, award, beneficiary","]"," ")),Object(i.b)("h3",{id:"burntbalance"},"Burnt(",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.treasury.Burnt.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Some of our funds have been burnt. ","[","burn","]"," ")),Object(i.b)("h3",{id:"depositbalance"},"Deposit(",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.treasury.Deposit.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Some funds have been deposited. ","[","deposit","]"," ")),Object(i.b)("h3",{id:"proposedproposalindex"},"Proposed(",Object(i.b)("inlineCode",{parentName:"h3"},"ProposalIndex"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.treasury.Proposed.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   New proposal. ","[","proposal_index","]"," ")),Object(i.b)("h3",{id:"rejectedproposalindex-balance"},"Rejected(",Object(i.b)("inlineCode",{parentName:"h3"},"ProposalIndex"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.treasury.Rejected.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   A proposal was rejected; funds were slashed. ","[","proposal_index, slashed","]"," ")),Object(i.b)("h3",{id:"rolloverbalance"},"Rollover(",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.treasury.Rollover.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Spending has finished; this is the amount that rolls over until next spend. ","[","budget_remaining","]"," ")),Object(i.b)("h3",{id:"spendingbalance"},"Spending(",Object(i.b)("inlineCode",{parentName:"h3"},"Balance"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.treasury.Spending.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   We have ended a spend period and will now allocate funds. ","[","budget_remaining","]"," ")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"utility"},"utility"),Object(i.b)("h3",{id:"batchcompleted"},"BatchCompleted()"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.utility.BatchCompleted.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Batch of dispatches completed fully with no error. ")),Object(i.b)("h3",{id:"batchinterruptedu32-dispatcherror"},"BatchInterrupted(",Object(i.b)("inlineCode",{parentName:"h3"},"u32"),", ",Object(i.b)("inlineCode",{parentName:"h3"},"DispatchError"),")"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"interface"),": ",Object(i.b)("inlineCode",{parentName:"li"},"api.events.utility.BatchInterrupted.is")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"summary"),":   Batch of dispatches did not complete fully. Index of first failing dispatch given, as well as the error. ","[","index, error","]"," ")))}o.isMDXComponent=!0},186:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return p}));var a=n(0),c=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,c=function(e,t){if(null==e)return{};var n,a,c={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var d=c.a.createContext({}),o=function(e){var t=c.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=o(e.components);return c.a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},m=c.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=b(e,["components","mdxType","originalType","parentName"]),s=o(n),m=a,p=s["".concat(l,".").concat(m)]||s[m]||u[m]||i;return n?c.a.createElement(p,r(r({ref:t},d),{},{components:n})):c.a.createElement(p,r({ref:t},d))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var r={};for(var b in t)hasOwnProperty.call(t,b)&&(r[b]=t[b]);r.originalType=e,r.mdxType="string"==typeof e?e:a,l[1]=r;for(var d=2;d<i;d++)l[d]=n[d];return c.a.createElement.apply(null,l)}return c.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);