(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{106:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return s})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return l}));var n=a(3),r=a(7),o=(a(0),a(186)),i={title:"Read storage, at a specific blockhash"},s={unversionedId:"api/examples/promise/read-storage-at",id:"api/examples/promise/read-storage-at",isDocsHomePage:!1,title:"Read storage, at a specific blockhash",description:"In addition to querying the latest storage, you can make storage queries at a specific blockhash. Be aware that the node applies a pruning strategy and typically only keeps the last 256 blocks, unless run in archive mode.",source:"@site/docs/api/examples/promise/read-storage-at.md",slug:"/api/examples/promise/read-storage-at",permalink:"/api/examples/promise/read-storage-at",editUrl:"https://github.com/yashirooooo/geek-zone/edit/master/docs/api/examples/promise/read-storage-at.md",version:"current",sidebar:"reference",previous:{title:"Read storage",permalink:"/api/examples/promise/read-storage"},next:{title:"Make a simple transfer",permalink:"/api/examples/promise/make-transfer"}},c=[],p={toc:c};function l(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"In addition to querying the latest storage, you can make storage queries at a specific blockhash. Be aware that the node applies a pruning strategy and typically only keeps the last 256 blocks, unless run in archive mode."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},"// Import the API\nconst { ApiPromise } = require('@polkadot/api');\nconst { typesBundleForPolkadot } = require('@crustio/type-definitions');\n\n// Our address for Alice on the dev chain\nconst ALICE = '5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY';\nconst BOB = '5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty';\n\nasync function main () {\n  // Create our API with a default connection to the local node\n  const api = await ApiPromise.create({\n            provider: new WsProvider('ws://127.0.0.1:9944'),\n            typesBundle: typesBundleForPolkadot\n        });\n\n  // Retrieve the last block header, extracting the hash and parentHash\n  const { hash, parentHash } = await api.rpc.chain.getHeader();\n\n  console.log(`last header hash ${hash.toHex()}`);\n\n  // Retrieve the balance at the preceding block for Alice. For at queries\n  // the format is always `.at(<blockhash>, ...params)`\n  const balance = await api.query.system.account.at(parentHash, ALICE);\n\n  console.log(`Alice's balance at ${parentHash.toHex()} was ${balance.data.free}`);\n\n  // Now perform a multi query, returning multiple balances at once\n  const balances = await api.query.system.account.multi([ALICE, BOB]);\n\n  console.log(`Current balances for Alice and Bob are ${balances[0].data.free} and ${balances[1].data.free}`);\n}\n\nmain().catch(console.error).finally(() => process.exit());\n")))}l.isMDXComponent=!0},186:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return f}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),l=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=l(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(a),m=n,f=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return a?r.a.createElement(f,s(s({ref:t},p),{},{components:a})):r.a.createElement(f,s({ref:t},p))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var p=2;p<o;p++)i[p]=a[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);